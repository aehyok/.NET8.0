// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using aehyok.EntityFrameworkCore.DbContexts;

#nullable disable

namespace aehyok.SystemService.Migrations
{
    [DbContext(typeof(DvsContext))]
    [Migration("20240125081342_UpdateScheduleTask")]
    partial class UpdateScheduleTask
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("aehyok.Basic.Domains.DictionaryGroup", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("Code")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasComment("标识");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasComment("创建时间");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint")
                        .HasComment("创建人id");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)")
                        .HasComment("是否删除");

                    b.Property<bool>("IsSystem")
                        .HasColumnType("tinyint(1)")
                        .HasComment("系统字典分组，无法编辑");

                    b.Property<string>("Name")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasComment("名称");

                    b.Property<int>("Order")
                        .HasColumnType("int")
                        .HasComment("排序");

                    b.Property<string>("Remark")
                        .HasColumnType("longtext")
                        .HasComment("备注");

                    b.Property<long>("SystemId")
                        .HasColumnType("bigint")
                        .HasComment("所属系统Id");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)")
                        .HasComment("修改时间");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint")
                        .HasComment("修改人id");

                    b.HasKey("Id");

                    b.ToTable("DictionaryGroup", t =>
                        {
                            t.HasComment("字典分组");
                        });
                });

            modelBuilder.Entity("aehyok.Basic.Domains.DictionaryItem", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("Code")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasComment("标识");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasComment("创建时间");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint")
                        .HasComment("创建人id");

                    b.Property<long>("DictionaryGroupId")
                        .HasColumnType("bigint")
                        .HasComment("字典分组");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)")
                        .HasComment("是否删除");

                    b.Property<bool>("IsEnable")
                        .HasColumnType("tinyint(1)")
                        .HasComment("是否启用");

                    b.Property<bool>("IsSystem")
                        .HasColumnType("tinyint(1)")
                        .HasComment("系统字典，应无法编辑修改");

                    b.Property<bool>("IsVisible")
                        .HasColumnType("tinyint(1)")
                        .HasComment("是否可见");

                    b.Property<string>("Name")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasComment("名称");

                    b.Property<int>("Order")
                        .HasColumnType("int")
                        .HasComment("排序");

                    b.Property<long>("ParentId")
                        .HasColumnType("bigint")
                        .HasComment("父级字典编号");

                    b.Property<string>("Remark")
                        .HasColumnType("longtext")
                        .HasComment("备注");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)")
                        .HasComment("修改时间");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint")
                        .HasComment("修改人id");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("DictionaryGroupId");

                    b.HasIndex("ParentId");

                    b.HasIndex("UpdatedBy");

                    b.ToTable("DictionaryItem", t =>
                        {
                            t.HasComment("字典项");
                        });
                });

            modelBuilder.Entity("aehyok.Basic.Domains.Options", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasComment("Id 主键");

                    b.Property<string>("Key")
                        .HasMaxLength(1024)
                        .HasColumnType("varchar(1024)")
                        .HasComment("键");

                    b.Property<string>("Remark")
                        .HasMaxLength(1024)
                        .HasColumnType("varchar(1024)")
                        .HasComment("描述");

                    b.Property<long>("SystemId")
                        .HasColumnType("bigint")
                        .HasComment("所属系统Id");

                    b.Property<long>("TenantId")
                        .HasColumnType("bigint")
                        .HasComment("租户Id");

                    b.Property<string>("Value")
                        .HasColumnType("text")
                        .HasComment("值");

                    b.HasKey("Id");

                    b.HasIndex("TenantId");

                    b.ToTable("Options", t =>
                        {
                            t.HasComment("系统配置参数项");
                        });
                });

            modelBuilder.Entity("aehyok.Basic.Domains.PlatformOptions", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasComment("创建时间");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint")
                        .HasComment("创建人id");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)")
                        .HasComment("是否删除");

                    b.Property<double>("Latitude")
                        .HasColumnType("double")
                        .HasComment("纬度");

                    b.Property<string>("LoginImage")
                        .HasColumnType("longtext")
                        .HasComment("登录页背景");

                    b.Property<string>("Logo")
                        .HasColumnType("longtext")
                        .HasComment("平台 Logo");

                    b.Property<double>("Longitude")
                        .HasColumnType("double")
                        .HasComment("经度");

                    b.Property<string>("Name")
                        .HasColumnType("longtext")
                        .HasComment("平台名称");

                    b.Property<string>("Remark")
                        .HasColumnType("longtext")
                        .HasComment("备注");

                    b.Property<long>("TenantId")
                        .HasColumnType("bigint")
                        .HasComment("租户Id");

                    b.Property<string>("Theme")
                        .HasColumnType("longtext")
                        .HasComment("平台主题");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)")
                        .HasComment("修改时间");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint")
                        .HasComment("修改人id");

                    b.HasKey("Id");

                    b.HasIndex("TenantId");

                    b.ToTable("PlatformOptions", t =>
                        {
                            t.HasComment("租户平台配置项");
                        });
                });

            modelBuilder.Entity("aehyok.Basic.Domains.System", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasComment("创建时间");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint")
                        .HasComment("创建人id");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)")
                        .HasComment("是否删除");

                    b.Property<string>("Name")
                        .HasColumnType("longtext")
                        .HasComment("系统名称");

                    b.Property<string>("Remark")
                        .HasColumnType("longtext")
                        .HasComment("备注");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)")
                        .HasComment("修改时间");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint")
                        .HasComment("修改人id");

                    b.HasKey("Id");

                    b.ToTable("System");
                });

            modelBuilder.Entity("aehyok.Basic.Domains.SystemRegion", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasComment("创建时间");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint")
                        .HasComment("创建人id");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)")
                        .HasComment("是否删除");

                    b.Property<long>("RegionId")
                        .HasColumnType("bigint")
                        .HasComment("区域Id");

                    b.Property<string>("Remark")
                        .HasColumnType("longtext")
                        .HasComment("备注");

                    b.Property<long>("SystemId")
                        .HasColumnType("bigint")
                        .HasComment("系统Id");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)")
                        .HasComment("修改时间");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint")
                        .HasComment("修改人id");

                    b.HasKey("Id");

                    b.HasIndex("RegionId");

                    b.HasIndex("SystemId");

                    b.ToTable("SystemRegion", t =>
                        {
                            t.HasComment("系统勾选区域Id");
                        });
                });

            modelBuilder.Entity("aehyok.Basic.Domains.Tenant", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("AppId")
                        .HasColumnType("longtext")
                        .HasComment("AppId");

                    b.Property<string>("AppSecret")
                        .HasColumnType("longtext")
                        .HasComment("App秘钥");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasComment("创建时间");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint")
                        .HasComment("创建人id");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)")
                        .HasComment("是否删除");

                    b.Property<string>("Name")
                        .HasColumnType("longtext")
                        .HasComment("租户名称");

                    b.Property<string>("Remark")
                        .HasColumnType("longtext")
                        .HasComment("备注");

                    b.Property<long>("SystemId")
                        .HasColumnType("bigint")
                        .HasComment("所属系统Id");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)")
                        .HasComment("修改时间");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint")
                        .HasComment("修改人id");

                    b.HasKey("Id");

                    b.ToTable("Tenant", t =>
                        {
                            t.HasComment("系统租户表");
                        });
                });

            modelBuilder.Entity("aehyok.Basic.Domains.UserToken", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasComment("创建时间");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint")
                        .HasComment("创建人id");

                    b.Property<DateTime>("ExpirationDate")
                        .HasColumnType("datetime(6)")
                        .HasComment("过期时间");

                    b.Property<string>("IpAddress")
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)")
                        .HasComment("获取 Token IP 地址");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)")
                        .HasComment("是否删除");

                    b.Property<int>("LoginMethodType")
                        .HasColumnType("int")
                        .HasComment("登录方式");

                    b.Property<int>("LoginType")
                        .HasColumnType("int")
                        .HasComment("登录方式");

                    b.Property<int>("PlatformType")
                        .HasColumnType("int")
                        .HasComment("当前获取 Token 平台");

                    b.Property<string>("RefreshToken")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasComment("Refresh Token");

                    b.Property<bool>("RefreshTokenIsAvailable")
                        .HasColumnType("tinyint(1)")
                        .HasComment("Refresh Token 是否有效");

                    b.Property<long>("RegionId")
                        .HasColumnType("bigint")
                        .HasComment("当前登录的区域编号");

                    b.Property<string>("Remark")
                        .HasColumnType("longtext")
                        .HasComment("备注");

                    b.Property<long>("RoleId")
                        .HasColumnType("bigint")
                        .HasComment("当前登录的角色编号");

                    b.Property<string>("Token")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasComment("Token");

                    b.Property<string>("TokenHash")
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)")
                        .HasComment("Token Hash 用于查询");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)")
                        .HasComment("修改时间");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint")
                        .HasComment("修改人id");

                    b.Property<string>("UserAgent")
                        .HasMaxLength(1024)
                        .HasColumnType("varchar(1024)")
                        .HasComment("获取 Token UserAgent");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint")
                        .HasComment("用户编号");

                    b.HasKey("Id");

                    b.HasIndex("RegionId");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("UserToken", t =>
                        {
                            t.HasComment("用户 Token");
                        });
                });

            modelBuilder.Entity("aehyok.Core.Domains.ApiResource", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("ActionName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasComment("操作名称");

                    b.Property<string>("Code")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasComment("接口标识");

                    b.Property<string>("ControllerName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasComment("控制器名称");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasComment("创建时间");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint")
                        .HasComment("创建人id");

                    b.Property<string>("GroupName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasComment("所有接口按 Controller 分组，分组名称为 Controller 注释");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)")
                        .HasComment("是否删除");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasComment("接口名称");

                    b.Property<string>("NameSpace")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasComment("命名空间");

                    b.Property<string>("Remark")
                        .HasColumnType("longtext")
                        .HasComment("备注");

                    b.Property<string>("RequestMethod")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasComment("请求方式");

                    b.Property<string>("RoutePattern")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasComment("路由匹配模式");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)")
                        .HasComment("修改时间");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint")
                        .HasComment("修改人id");

                    b.HasKey("Id");

                    b.ToTable("ApiResource", t =>
                        {
                            t.HasComment("接口资源");
                        });
                });

            modelBuilder.Entity("aehyok.Core.Domains.AsyncTask", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("Code")
                        .HasColumnType("longtext")
                        .HasComment("任务标识，根据该值判断处理方式");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasComment("创建时间");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint")
                        .HasComment("创建人id");

                    b.Property<string>("Data")
                        .HasColumnType("longtext")
                        .HasComment("任务数据");

                    b.Property<string>("ErrorMessage")
                        .HasColumnType("longtext")
                        .HasComment("错误消息");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)")
                        .HasComment("是否删除");

                    b.Property<string>("Remark")
                        .HasColumnType("longtext")
                        .HasComment("备注");

                    b.Property<string>("Result")
                        .HasColumnType("longtext")
                        .HasComment("任务返回数据");

                    b.Property<int>("RetryCount")
                        .HasColumnType("int")
                        .HasComment("重试次数");

                    b.Property<int>("State")
                        .HasColumnType("int")
                        .HasComment("任务状态");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)")
                        .HasComment("修改时间");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint")
                        .HasComment("修改人id");

                    b.HasKey("Id");

                    b.ToTable("AsyncTask", t =>
                        {
                            t.HasComment("异步任务");
                        });
                });

            modelBuilder.Entity("aehyok.Core.Domains.File", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("ContentType")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasComment("文件MIME");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasComment("创建时间");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint")
                        .HasComment("创建人id");

                    b.Property<string>("Extension")
                        .HasMaxLength(16)
                        .HasColumnType("varchar(16)")
                        .HasComment("文件扩展名");

                    b.Property<string>("Hash")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasComment("文件 MD5 Hash 值");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)")
                        .HasComment("是否删除");

                    b.Property<string>("Name")
                        .HasMaxLength(512)
                        .HasColumnType("varchar(512)")
                        .HasComment("文件名称");

                    b.Property<long>("OriginalId")
                        .HasColumnType("bigint")
                        .HasComment("原文件 Id, 用于存储缩略图、裁剪图、视频转码等文件的原始文件编号，如果为 0 表示该文件为原始文件");

                    b.Property<string>("Path")
                        .HasMaxLength(1024)
                        .HasColumnType("varchar(1024)")
                        .HasComment("文件存储路径");

                    b.Property<string>("Remark")
                        .HasColumnType("longtext")
                        .HasComment("备注");

                    b.Property<long>("Size")
                        .HasColumnType("bigint")
                        .HasComment("文件大小(字节) 1024字节=1KB");

                    b.Property<int>("State")
                        .HasColumnType("int")
                        .HasComment("文件状态");

                    b.Property<int>("StorageType")
                        .HasColumnType("int")
                        .HasComment("文件存储方式");

                    b.Property<int>("Type")
                        .HasColumnType("int")
                        .HasComment("文件类型");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)")
                        .HasComment("修改时间");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint")
                        .HasComment("修改人id");

                    b.Property<string>("Url")
                        .HasMaxLength(1024)
                        .HasColumnType("varchar(1024)")
                        .HasComment("文件 Url");

                    b.HasKey("Id");

                    b.ToTable("File", t =>
                        {
                            t.HasComment("文件");
                        });
                });

            modelBuilder.Entity("aehyok.Core.Domains.Menu", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("ActiveIcon")
                        .HasMaxLength(1024)
                        .HasColumnType("varchar(1024)")
                        .HasComment("选中图标");

                    b.Property<int>("ActiveIconType")
                        .HasColumnType("int")
                        .HasComment("菜单选中图标类型");

                    b.Property<string>("Code")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasComment("菜单标识");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasComment("创建时间");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint")
                        .HasComment("创建人id");

                    b.Property<string>("Icon")
                        .HasMaxLength(1024)
                        .HasColumnType("varchar(1024)")
                        .HasComment("图标");

                    b.Property<int>("IconType")
                        .HasColumnType("int")
                        .HasComment("菜单图标类型");

                    b.Property<string>("IdSequences")
                        .HasMaxLength(1024)
                        .HasColumnType("varchar(1024)")
                        .HasComment("Id 序列");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)")
                        .HasComment("是否删除");

                    b.Property<bool>("IsExternalLink")
                        .HasColumnType("tinyint(1)")
                        .HasComment("是否外链");

                    b.Property<bool>("IsVisible")
                        .HasColumnType("tinyint(1)")
                        .HasComment("是否可见");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasComment("菜单名称");

                    b.Property<int>("Order")
                        .HasColumnType("int")
                        .HasComment("排序");

                    b.Property<long>("ParentId")
                        .HasColumnType("bigint")
                        .HasComment("父级菜单");

                    b.Property<int>("PlatformType")
                        .HasColumnType("int")
                        .HasComment("所属平台类型");

                    b.Property<string>("Remark")
                        .HasColumnType("longtext")
                        .HasComment("备注");

                    b.Property<long>("SystemId")
                        .HasColumnType("bigint")
                        .HasComment("所属系统Id");

                    b.Property<int>("Type")
                        .HasColumnType("int")
                        .HasComment("菜单类型");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)")
                        .HasComment("修改时间");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint")
                        .HasComment("修改人id");

                    b.Property<string>("Url")
                        .HasMaxLength(1024)
                        .HasColumnType("varchar(1024)")
                        .HasComment("路径");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.ToTable("Menu", t =>
                        {
                            t.HasComment("菜单");
                        });
                });

            modelBuilder.Entity("aehyok.Core.Domains.MenuResource", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<long>("ApiResourceId")
                        .HasColumnType("bigint")
                        .HasComment("接口编号");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasComment("创建时间");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint")
                        .HasComment("创建人id");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)")
                        .HasComment("是否删除");

                    b.Property<long>("MenuId")
                        .HasColumnType("bigint")
                        .HasComment("菜单编号");

                    b.Property<string>("Remark")
                        .HasColumnType("longtext")
                        .HasComment("备注");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)")
                        .HasComment("修改时间");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint")
                        .HasComment("修改人id");

                    b.HasKey("Id");

                    b.HasIndex("ApiResourceId");

                    b.HasIndex("MenuId");

                    b.ToTable("MenuResource", t =>
                        {
                            t.HasComment("菜单与接口关联数据");
                        });
                });

            modelBuilder.Entity("aehyok.Core.Domains.OperationLog", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasComment("创建时间");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint")
                        .HasComment("创建人id");

                    b.Property<string>("IpAddress")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasComment("IP 地址");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)")
                        .HasComment("是否删除");

                    b.Property<string>("MenuCode")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasComment("菜单代码");

                    b.Property<string>("OperationContent")
                        .HasMaxLength(512)
                        .HasColumnType("varchar(512)")
                        .HasComment("操作");

                    b.Property<string>("OperationMenu")
                        .HasColumnType("longtext")
                        .HasComment("操作菜单");

                    b.Property<string>("Remark")
                        .HasColumnType("longtext")
                        .HasComment("备注");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)")
                        .HasComment("修改时间");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint")
                        .HasComment("修改人id");

                    b.Property<string>("UserAgent")
                        .HasMaxLength(512)
                        .HasColumnType("varchar(512)")
                        .HasComment("User Agent");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.ToTable("OperationLog", t =>
                        {
                            t.HasComment("操作日志");
                        });
                });

            modelBuilder.Entity("aehyok.Core.Domains.Permission", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasComment("创建时间");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint")
                        .HasComment("创建人id");

                    b.Property<int>("DataRange")
                        .HasColumnType("int")
                        .HasComment("权限数据范围");

                    b.Property<bool>("HasPermission")
                        .HasColumnType("tinyint(1)")
                        .HasComment("是否拥有权限");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)")
                        .HasComment("是否删除");

                    b.Property<long>("MenuId")
                        .HasColumnType("bigint")
                        .HasComment("菜单编号");

                    b.Property<string>("Remark")
                        .HasColumnType("longtext")
                        .HasComment("备注");

                    b.Property<long>("RoleId")
                        .HasColumnType("bigint")
                        .HasComment("权限所属对象编号");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)")
                        .HasComment("修改时间");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint")
                        .HasComment("修改人id");

                    b.HasKey("Id");

                    b.HasIndex("MenuId");

                    b.HasIndex("RoleId");

                    b.ToTable("Permission", t =>
                        {
                            t.HasComment("权限表RoleMenu(角色下勾选的所有菜单)");
                        });
                });

            modelBuilder.Entity("aehyok.Core.Domains.Region", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("Code")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasComment("别名");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasComment("创建时间");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint")
                        .HasComment("创建人id");

                    b.Property<string>("IdSequences")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasComment("Id 序列");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)")
                        .HasComment("是否删除");

                    b.Property<int>("Level")
                        .HasColumnType("int")
                        .HasComment("层级");

                    b.Property<string>("Name")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasComment("名称");

                    b.Property<int>("Order")
                        .HasColumnType("int")
                        .HasComment("显示排序");

                    b.Property<long>("ParentId")
                        .HasColumnType("bigint")
                        .HasComment("父级编号，无父级为 0");

                    b.Property<string>("Remark")
                        .HasColumnType("longtext")
                        .HasComment("备注");

                    b.Property<string>("ShortName")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasComment("简称");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)")
                        .HasComment("修改时间");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint")
                        .HasComment("修改人id");

                    b.HasKey("Id");

                    b.ToTable("Region", t =>
                        {
                            t.HasComment("行政区域");
                        });
                });

            modelBuilder.Entity("aehyok.Core.Domains.Role", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("Code")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasComment("别名");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasComment("创建时间");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint")
                        .HasComment("创建人id");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)")
                        .HasComment("是否删除");

                    b.Property<bool>("IsEnable")
                        .HasColumnType("tinyint(1)")
                        .HasComment("是否启用");

                    b.Property<bool>("IsSystem")
                        .HasColumnType("tinyint(1)")
                        .HasComment("是否系统内置角色");

                    b.Property<string>("Name")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasComment("名称");

                    b.Property<int>("Order")
                        .HasColumnType("int")
                        .HasComment("显示排序");

                    b.Property<int>("PlatformType")
                        .HasColumnType("int")
                        .HasComment("所属平台类型");

                    b.Property<string>("Remark")
                        .HasColumnType("longtext")
                        .HasComment("备注");

                    b.Property<long>("SystemId")
                        .HasColumnType("bigint")
                        .HasComment("所属系统Id");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)")
                        .HasComment("修改时间");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint")
                        .HasComment("修改人id");

                    b.HasKey("Id");

                    b.ToTable("Role", t =>
                        {
                            t.HasComment("角色");
                        });
                });

            modelBuilder.Entity("aehyok.Core.Domains.ScheduleTask", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("Code")
                        .HasColumnType("longtext")
                        .HasComment("代码，默认为 Schedule 的类名");

                    b.Property<string>("Expression")
                        .HasColumnType("longtext")
                        .HasComment("Cron 表达式");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)")
                        .HasComment("是否删除");

                    b.Property<DateTime>("LastExecuteTime")
                        .HasColumnType("datetime(6)")
                        .HasComment("最后一次执行时间");

                    b.Property<string>("Name")
                        .HasColumnType("longtext")
                        .HasComment("名称");

                    b.Property<DateTime>("NextExecuteTime")
                        .HasColumnType("datetime(6)")
                        .HasComment("下次执行时间");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasComment("状态");

                    b.HasKey("Id");

                    b.ToTable("ScheduleTask", t =>
                        {
                            t.HasComment("定时任务");
                        });
                });

            modelBuilder.Entity("aehyok.Core.Domains.SeedDataTask", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("ConfigPath")
                        .HasColumnType("longtext")
                        .HasComment("配置文件地址");

                    b.Property<int>("ExecuteStatus")
                        .HasColumnType("int")
                        .HasComment("任务执行状态");

                    b.Property<DateTime>("ExecuteTime")
                        .HasColumnType("datetime(6)")
                        .HasComment("执行时间");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)")
                        .HasComment("是否删除");

                    b.Property<bool>("IsEnable")
                        .HasColumnType("tinyint(1)")
                        .HasComment("是否启用");

                    b.Property<DateTime>("LastWriteTime")
                        .HasColumnType("datetime(6)")
                        .HasComment("最后一次的文件修改时间");

                    b.Property<string>("TaskName")
                        .HasColumnType("longtext")
                        .HasComment("任务名称");

                    b.HasKey("Id");

                    b.ToTable("SeedDataTask", t =>
                        {
                            t.HasComment("种子数据更新任务");
                        });
                });

            modelBuilder.Entity("aehyok.Core.Domains.Template", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("Code")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasComment("编码");

                    b.Property<string>("Content")
                        .HasMaxLength(2048)
                        .HasColumnType("varchar(2048)")
                        .HasComment("内容");

                    b.Property<int>("ContentType")
                        .HasColumnType("int")
                        .HasComment("内容类型");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasComment("创建时间");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint")
                        .HasComment("创建人id");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)")
                        .HasComment("是否删除");

                    b.Property<string>("Name")
                        .HasMaxLength(120)
                        .HasColumnType("varchar(120)")
                        .HasComment("名称");

                    b.Property<string>("Remark")
                        .HasColumnType("longtext")
                        .HasComment("备注");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)")
                        .HasComment("修改时间");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint")
                        .HasComment("修改人id");

                    b.Property<string>("Variable")
                        .HasColumnType("longtext")
                        .HasComment("变量");

                    b.HasKey("Id");

                    b.ToTable("Template", t =>
                        {
                            t.HasComment("模板");
                        });
                });

            modelBuilder.Entity("aehyok.Core.Domains.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("Avatar")
                        .HasMaxLength(512)
                        .HasColumnType("varchar(512)")
                        .HasComment("头像");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasComment("创建时间");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint")
                        .HasComment("创建人id");

                    b.Property<string>("Email")
                        .HasMaxLength(120)
                        .HasColumnType("varchar(120)")
                        .HasComment("邮箱");

                    b.Property<int>("Gender")
                        .HasColumnType("int")
                        .HasComment("性别");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)")
                        .HasComment("是否删除");

                    b.Property<bool>("IsEnable")
                        .HasColumnType("tinyint(1)")
                        .HasComment("是否启用");

                    b.Property<DateTime>("LastLoginTime")
                        .HasColumnType("datetime(6)")
                        .HasComment("最后登录时间");

                    b.Property<string>("Mobile")
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)")
                        .HasComment("手机号码");

                    b.Property<string>("NickName")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasComment("昵称");

                    b.Property<string>("Password")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasComment("密码");

                    b.Property<string>("PasswordSalt")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasComment("Password Salt");

                    b.Property<string>("RealName")
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)")
                        .HasComment("真实姓名");

                    b.Property<string>("Remark")
                        .HasColumnType("longtext")
                        .HasComment("备注");

                    b.Property<string>("SignatureUrl")
                        .HasColumnType("longtext")
                        .HasComment("签名url");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)")
                        .HasComment("修改时间");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint")
                        .HasComment("修改人id");

                    b.Property<string>("UserName")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasComment("用户名");

                    b.HasKey("Id");

                    b.ToTable("User", t =>
                        {
                            t.HasComment("用户");
                        });
                });

            modelBuilder.Entity("aehyok.Core.Domains.UserRole", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasComment("创建时间");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint")
                        .HasComment("创建人id");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("tinyint(1)")
                        .HasComment("是否默认角色");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)")
                        .HasComment("是否删除");

                    b.Property<long>("RegionId")
                        .HasColumnType("bigint")
                        .HasComment("所属行政区域编号");

                    b.Property<string>("Remark")
                        .HasColumnType("longtext")
                        .HasComment("备注");

                    b.Property<long>("RoleId")
                        .HasColumnType("bigint")
                        .HasComment("角色编号");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)")
                        .HasComment("修改时间");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint")
                        .HasComment("修改人id");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint")
                        .HasComment("用户编号");

                    b.HasKey("Id");

                    b.HasIndex("RegionId");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("UserRole", t =>
                        {
                            t.HasComment("用户角色关联信息");
                        });
                });

            modelBuilder.Entity("aehyok.NCDP.Domains.AutoDictionary", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasComment("创建时间");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint")
                        .HasComment("创建人id");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)")
                        .HasComment("是否删除");

                    b.Property<string>("Remark")
                        .HasColumnType("longtext")
                        .HasComment("备注");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)")
                        .HasComment("修改时间");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint")
                        .HasComment("修改人id");

                    b.HasKey("Id");

                    b.ToTable("AutoDictionary", t =>
                        {
                            t.HasComment("自动化字典");
                        });
                });

            modelBuilder.Entity("aehyok.NCDP.Domains.AutoForm", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasComment("创建时间");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint")
                        .HasComment("创建人id");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)")
                        .HasComment("是否删除");

                    b.Property<string>("Remark")
                        .HasColumnType("longtext")
                        .HasComment("备注");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)")
                        .HasComment("修改时间");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint")
                        .HasComment("修改人id");

                    b.HasKey("Id");

                    b.ToTable("AutoForm", t =>
                        {
                            t.HasComment("自定义表单表");
                        });
                });

            modelBuilder.Entity("aehyok.NCDP.Domains.AutoGuideLine", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasComment("创建时间");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint")
                        .HasComment("创建人id");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)")
                        .HasComment("是否删除");

                    b.Property<string>("Remark")
                        .HasColumnType("longtext")
                        .HasComment("备注");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)")
                        .HasComment("修改时间");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint")
                        .HasComment("修改人id");

                    b.HasKey("Id");

                    b.ToTable("AutoGuideLine", t =>
                        {
                            t.HasComment("自动化指标表");
                        });
                });

            modelBuilder.Entity("aehyok.NCDP.Domains.AutoRecord", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasComment("创建时间");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint")
                        .HasComment("创建人id");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)")
                        .HasComment("是否删除");

                    b.Property<string>("Remark")
                        .HasColumnType("longtext")
                        .HasComment("备注");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)")
                        .HasComment("修改时间");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint")
                        .HasComment("修改人id");

                    b.HasKey("Id");

                    b.ToTable("AutoRecord");
                });

            modelBuilder.Entity("aehyok.NCDP.Domains.AutoRecordLog", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasComment("创建时间");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint")
                        .HasComment("创建人id");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)")
                        .HasComment("是否删除");

                    b.Property<string>("Remark")
                        .HasColumnType("longtext")
                        .HasComment("备注");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)")
                        .HasComment("修改时间");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint")
                        .HasComment("修改人id");

                    b.HasKey("Id");

                    b.ToTable("AutoRecordLog", t =>
                        {
                            t.HasComment("自动化填报记录日志");
                        });
                });

            modelBuilder.Entity("aehyok.NCDP.Domains.AutoTask", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasComment("创建时间");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint")
                        .HasComment("创建人id");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)")
                        .HasComment("是否删除");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasComment("名称");

                    b.Property<string>("Remark")
                        .HasColumnType("longtext")
                        .HasComment("备注");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)")
                        .HasComment("修改时间");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint")
                        .HasComment("修改人id");

                    b.HasKey("Id");

                    b.ToTable("AutoTask", t =>
                        {
                            t.HasComment("自动化任务表");
                        });
                });

            modelBuilder.Entity("aehyok.NCDP.Domains.AutoTaskLog", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasComment("创建时间");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint")
                        .HasComment("创建人id");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)")
                        .HasComment("是否删除");

                    b.Property<string>("Remark")
                        .HasColumnType("longtext")
                        .HasComment("备注");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)")
                        .HasComment("修改时间");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint")
                        .HasComment("修改人id");

                    b.HasKey("Id");

                    b.ToTable("AutoTaskLog", t =>
                        {
                            t.HasComment("自动化任务日志");
                        });
                });

            modelBuilder.Entity("aehyok.NCDP.Domains.AutoTaskRelation", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasComment("创建时间");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint")
                        .HasComment("创建人id");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)")
                        .HasComment("是否删除");

                    b.Property<string>("Remark")
                        .HasColumnType("longtext")
                        .HasComment("备注");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)")
                        .HasComment("修改时间");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint")
                        .HasComment("修改人id");

                    b.HasKey("Id");

                    b.ToTable("AutoTaskRelation", t =>
                        {
                            t.HasComment("自动化任务关联关系");
                        });
                });

            modelBuilder.Entity("aehyok.SystemService.Domains.MessageQueueEventHandler", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)")
                        .HasComment("是否删除");

                    b.HasKey("Id");

                    b.ToTable("MessageQueueEventHandler", t =>
                        {
                            t.HasComment("RabbitMQ消息队列事件处理器");
                        });
                });

            modelBuilder.Entity("aehyok.Basic.Domains.DictionaryItem", b =>
                {
                    b.HasOne("aehyok.Core.Domains.User", "Creator")
                        .WithMany()
                        .HasForeignKey("CreatedBy");

                    b.HasOne("aehyok.Basic.Domains.DictionaryGroup", "DictionaryGroup")
                        .WithMany("Items")
                        .HasForeignKey("DictionaryGroupId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("aehyok.Basic.Domains.DictionaryItem", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("aehyok.Core.Domains.User", "Modifier")
                        .WithMany()
                        .HasForeignKey("UpdatedBy");

                    b.Navigation("Creator");

                    b.Navigation("DictionaryGroup");

                    b.Navigation("Modifier");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("aehyok.Basic.Domains.Options", b =>
                {
                    b.HasOne("aehyok.Basic.Domains.Tenant", "Tenant")
                        .WithMany()
                        .HasForeignKey("TenantId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Tenant");
                });

            modelBuilder.Entity("aehyok.Basic.Domains.PlatformOptions", b =>
                {
                    b.HasOne("aehyok.Basic.Domains.Tenant", "Tenant")
                        .WithMany()
                        .HasForeignKey("TenantId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Tenant");
                });

            modelBuilder.Entity("aehyok.Basic.Domains.SystemRegion", b =>
                {
                    b.HasOne("aehyok.Core.Domains.Region", "Region")
                        .WithMany()
                        .HasForeignKey("RegionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("aehyok.Basic.Domains.System", "System")
                        .WithMany()
                        .HasForeignKey("SystemId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Region");

                    b.Navigation("System");
                });

            modelBuilder.Entity("aehyok.Basic.Domains.UserToken", b =>
                {
                    b.HasOne("aehyok.Core.Domains.Region", "Region")
                        .WithMany()
                        .HasForeignKey("RegionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("aehyok.Core.Domains.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("aehyok.Core.Domains.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Region");

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("aehyok.Core.Domains.Menu", b =>
                {
                    b.HasOne("aehyok.Core.Domains.Menu", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("aehyok.Core.Domains.MenuResource", b =>
                {
                    b.HasOne("aehyok.Core.Domains.ApiResource", "ApiResource")
                        .WithMany()
                        .HasForeignKey("ApiResourceId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("aehyok.Core.Domains.Menu", "Menu")
                        .WithMany("Resources")
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ApiResource");

                    b.Navigation("Menu");
                });

            modelBuilder.Entity("aehyok.Core.Domains.OperationLog", b =>
                {
                    b.HasOne("aehyok.Core.Domains.User", "CreatedUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy");

                    b.Navigation("CreatedUser");
                });

            modelBuilder.Entity("aehyok.Core.Domains.Permission", b =>
                {
                    b.HasOne("aehyok.Core.Domains.Menu", "Menu")
                        .WithMany()
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("aehyok.Core.Domains.Role", "Role")
                        .WithMany("Permissions")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Menu");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("aehyok.Core.Domains.UserRole", b =>
                {
                    b.HasOne("aehyok.Core.Domains.Region", "Region")
                        .WithMany()
                        .HasForeignKey("RegionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("aehyok.Core.Domains.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("aehyok.Core.Domains.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Region");

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("aehyok.Basic.Domains.DictionaryGroup", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("aehyok.Basic.Domains.DictionaryItem", b =>
                {
                    b.Navigation("Children");
                });

            modelBuilder.Entity("aehyok.Core.Domains.Menu", b =>
                {
                    b.Navigation("Children");

                    b.Navigation("Resources");
                });

            modelBuilder.Entity("aehyok.Core.Domains.Role", b =>
                {
                    b.Navigation("Permissions");

                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("aehyok.Core.Domains.User", b =>
                {
                    b.Navigation("UserRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
